
::ng-deep * {
  margin: 0;
  padding: 0;
  font-family: "Poppins", sans-serif;
  box-sizing: border-box;
  
}
::ng-deep body {
  width: 100%;
  height: 100vh;
  background-color: rgb(0, 0, 0);
}
.main {
  width: 100%;
  height: 100vh;
  background: url("../../../assets/dmitry-levykin-photographer-irina-telicheva-model-girl-brune.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  min-width: 300px;
  min-height: 128px;
}
.bg-blur {
  width: 100%;
  height: 100vh;
  backdrop-filter: blur(50px);
  display: flex;
  justify-content: center;
  align-items: center;

}
.logo{
  position: absolute;
  top: 0;
  left: 0;
  padding-left: 50px;
  padding-top: 50px;

}
.logo h1 a{
  text-decoration: none;
  color: white;


}
.text-content{
  width: 100%;
  height: calc(100% -50px);
  display: flex;
  justify-content: center;
  align-items: center;
  margin: auto;
  padding-top: 10%;
}
.pwcontainer{
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.ctr{
  color: white;
  font-weight: 200;
}
.lds-ellipsis {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}
.lds-ellipsis div {
  position: absolute;
  top: 33px;
  width: 13px;
  height: 13px;
  border-radius: 50%;
  background: #fff;
  animation-timing-function: cubic-bezier(0, 1, 1, 0);
}
.lds-ellipsis div:nth-child(1) {
  left: 8px;
  animation: lds-ellipsis1 0.6s infinite;
}
.lds-ellipsis div:nth-child(2) {
  left: 8px;
  animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(3) {
  left: 32px;
  animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(4) {
  left: 56px;
  animation: lds-ellipsis3 0.6s infinite;
}
@keyframes lds-ellipsis1 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes lds-ellipsis3 {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
@keyframes lds-ellipsis2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(24px, 0);
  }
}


@media screen and (min-width: 500px) {
  .text-content{
  display: block;
  position: absolute;
  top: 10%;
  }
}
.success-animation { margin:150px auto;}

.checkmark {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    display: block;
    stroke-width: 2;
    stroke: #4bb71b;
    stroke-miterlimit: 10;
    box-shadow: inset 0px 0px 0px #4bb71b;
    animation: fill .4s ease-in-out .4s forwards, scale .3s ease-in-out .9s both;
    position:relative;
    top: 5px;
    right: 5px;
   margin: 0 auto;
}
.checkmark__circle {
    stroke-dasharray: 166;
    stroke-dashoffset: 166;
    stroke-width: 2;
    stroke-miterlimit: 10;
    animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
 
}

.checkmark__check {
    transform-origin: 50% 50%;
    stroke-dasharray: 48;
    stroke-dashoffset: 48;
    animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
}

@keyframes stroke {
    100% {
        stroke-dashoffset: 0;
    }
}

@keyframes scale {
    0%, 100% {
        transform: none;
    }

    50% {
        transform: scale3d(1.1, 1.1, 1);
    }
}

@keyframes fill {
    100% {
    }
}





.container {
  height: 440px;
  width: 275px;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 2px 10px 10px rgba(#000, 0.05);
}

.circle,
.circle-border {
  width: 120px;
  height: 120px;
  border-radius: 50%;
}

.circle {
  z-index: 1;
  position: relative;
  transform: scale(1);
  animation: success-anim 700ms ease;
}

.circle-border {
  z-index: 0;
  position: absolute;
  transform: scale(1.1);
  animation: circle-anim 400ms ease;
}

@keyframes success-anim {
  0% {
    transform: scale(0);
  }
  30% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes circle-anim {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1.1);
  }
}

.error::before,
.error::after {
  content: "";
  display: block;
  height: 4px;
  background: #f86;
  position: absolute;
}

.error::before {
  width: 80px;
  top: 60%;
  left: 16%;
  transform: rotateZ(50deg);
}

.error::after {
  width: 80px;
  top: 60%;
  left: 16%;
  transform: rotateZ(-50deg);
}